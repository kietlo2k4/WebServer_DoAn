// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebServer_DoAn.Models;

#nullable disable

namespace WebServer_DoAn.Migrations
{
    [DbContext(typeof(QuanLyDaoTaoContext))]
    [Migration("20250722110748_TableMigration")]
    partial class TableMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("WebServer_DoAn.Models.ChinhSachHocTap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("HocKy")
                        .HasColumnType("int");

                    b.Property<string>("MaNganh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("NamHoc")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayBatDauDangKy")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("NgayKetThucDangKy")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TinChiToiDa")
                        .HasColumnType("int");

                    b.Property<int>("TinChiToiThieu")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaNganh");

                    b.ToTable("ChinhSachHocTaps");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.ChuongTrinhKhung", b =>
                {
                    b.Property<string>("MaCTK")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("BatBuoc")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("HocKy")
                        .HasColumnType("int");

                    b.Property<string>("MaMonHoc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MaNganh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("MaCTK");

                    b.HasIndex("MaMonHoc");

                    b.HasIndex("MaNganh");

                    b.ToTable("ChuongTrinhKhungs");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.DangKyHocPhan", b =>
                {
                    b.Property<string>("MaDangKy")
                        .HasColumnType("varchar(255)");

                    b.Property<double?>("DiemCC")
                        .HasColumnType("double");

                    b.Property<double?>("DiemCK")
                        .HasColumnType("double");

                    b.Property<double?>("DiemGK")
                        .HasColumnType("double");

                    b.Property<double?>("DiemTongKet")
                        .HasColumnType("double");

                    b.Property<string>("MaLopHP")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MaSV")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("NgayDangKy")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("MaDangKy");

                    b.HasIndex("MaLopHP");

                    b.HasIndex("MaSV");

                    b.ToTable("DangKyHocPhans");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.Khoa", b =>
                {
                    b.Property<string>("MaKhoa")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TenKhoa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("MaKhoa");

                    b.ToTable("Khoas");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.LopHocPhan", b =>
                {
                    b.Property<string>("MaLopHP")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("HocKy")
                        .HasColumnType("int");

                    b.Property<string>("MaMonHoc")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("NamHoc")
                        .HasColumnType("int");

                    b.Property<string>("Nhom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhongHoc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("SoLuongDangKy")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuongToiDa")
                        .HasColumnType("int");

                    b.Property<string>("Thu")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("TietBatDau")
                        .HasColumnType("int");

                    b.Property<int?>("TietKetThuc")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("MaLopHP");

                    b.HasIndex("MaMonHoc");

                    b.ToTable("LopHocPhans");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.LopSinhVien", b =>
                {
                    b.Property<string>("MaLop")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("KhoaHoc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MaNganh")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TenLop")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("MaLop");

                    b.HasIndex("MaNganh");

                    b.ToTable("LopSinhViens");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.MonHoc", b =>
                {
                    b.Property<string>("MaMonHoc")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LoaiMon")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MaMonTienQuyet")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MaNganh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("SoTiet")
                        .HasColumnType("int");

                    b.Property<int?>("SoTinChi")
                        .HasColumnType("int");

                    b.Property<string>("TenMonHoc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("MaMonHoc");

                    b.HasIndex("MaNganh");

                    b.ToTable("MonHocs");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.Nganh", b =>
                {
                    b.Property<string>("MaNganh")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MaKhoa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TenNganh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("MaNganh");

                    b.HasIndex("MaKhoa");

                    b.ToTable("Nganhs");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.SinhVien", b =>
                {
                    b.Property<string>("MaSV")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MaLop")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("QueQuan")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TaiKhoanDangNhap")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("MaSV");

                    b.HasIndex("MaLop");

                    b.HasIndex("TaiKhoanDangNhap");

                    b.ToTable("SinhViens");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.TaiKhoan", b =>
                {
                    b.Property<string>("TaiKhoanDangNhap")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TaiKhoanDangNhap");

                    b.ToTable("TaiKhoans");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.ThanhToan", b =>
                {
                    b.Property<string>("MaThanhToan")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MaLopHP")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MaSV")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("NgayThanhToan")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("SoTien")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("MaThanhToan");

                    b.HasIndex("MaLopHP");

                    b.HasIndex("MaSV");

                    b.ToTable("ThanhToans");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.XemLichHoc", b =>
                {
                    b.Property<string>("MaLichHoc")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("HocKy")
                        .HasColumnType("int");

                    b.Property<string>("MaLopHP")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MaMonHoc")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MaSV")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("NamHoc")
                        .HasColumnType("int");

                    b.Property<string>("Nhom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhongHoc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TenMonHoc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Thu")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("TietBatDau")
                        .HasColumnType("int");

                    b.Property<int?>("TietKetThuc")
                        .HasColumnType("int");

                    b.HasKey("MaLichHoc");

                    b.HasIndex("MaLopHP");

                    b.HasIndex("MaMonHoc");

                    b.HasIndex("MaSV");

                    b.ToTable("XemLichHocs");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.ChinhSachHocTap", b =>
                {
                    b.HasOne("WebServer_DoAn.Models.Nganh", "Nganh")
                        .WithMany()
                        .HasForeignKey("MaNganh")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Nganh");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.ChuongTrinhKhung", b =>
                {
                    b.HasOne("WebServer_DoAn.Models.MonHoc", "MonHoc")
                        .WithMany("ChuongTrinhKhungs")
                        .HasForeignKey("MaMonHoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebServer_DoAn.Models.Nganh", "Nganh")
                        .WithMany("ChuongTrinhKhungs")
                        .HasForeignKey("MaNganh")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MonHoc");

                    b.Navigation("Nganh");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.DangKyHocPhan", b =>
                {
                    b.HasOne("WebServer_DoAn.Models.LopHocPhan", "LopHocPhan")
                        .WithMany("DangKyHocPhans")
                        .HasForeignKey("MaLopHP")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebServer_DoAn.Models.SinhVien", "SinhVien")
                        .WithMany("DangKyHocPhans")
                        .HasForeignKey("MaSV")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LopHocPhan");

                    b.Navigation("SinhVien");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.LopHocPhan", b =>
                {
                    b.HasOne("WebServer_DoAn.Models.MonHoc", "MonHoc")
                        .WithMany("LopHocPhans")
                        .HasForeignKey("MaMonHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonHoc");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.LopSinhVien", b =>
                {
                    b.HasOne("WebServer_DoAn.Models.Nganh", "Nganh")
                        .WithMany("LopSinhViens")
                        .HasForeignKey("MaNganh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nganh");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.MonHoc", b =>
                {
                    b.HasOne("WebServer_DoAn.Models.Nganh", "Nganh")
                        .WithMany("MonHocs")
                        .HasForeignKey("MaNganh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nganh");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.Nganh", b =>
                {
                    b.HasOne("WebServer_DoAn.Models.Khoa", "Khoa")
                        .WithMany("Nganhs")
                        .HasForeignKey("MaKhoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Khoa");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.SinhVien", b =>
                {
                    b.HasOne("WebServer_DoAn.Models.LopSinhVien", "LopSinhVien")
                        .WithMany("SinhViens")
                        .HasForeignKey("MaLop")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebServer_DoAn.Models.TaiKhoan", "TaiKhoan")
                        .WithMany("SinhViens")
                        .HasForeignKey("TaiKhoanDangNhap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LopSinhVien");

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.ThanhToan", b =>
                {
                    b.HasOne("WebServer_DoAn.Models.LopHocPhan", "LopHocPhan")
                        .WithMany("ThanhToans")
                        .HasForeignKey("MaLopHP")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebServer_DoAn.Models.SinhVien", "SinhVien")
                        .WithMany("ThanhToans")
                        .HasForeignKey("MaSV")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LopHocPhan");

                    b.Navigation("SinhVien");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.XemLichHoc", b =>
                {
                    b.HasOne("WebServer_DoAn.Models.LopHocPhan", "LopHocPhan")
                        .WithMany("XemLichHocs")
                        .HasForeignKey("MaLopHP")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebServer_DoAn.Models.MonHoc", "MonHoc")
                        .WithMany()
                        .HasForeignKey("MaMonHoc")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebServer_DoAn.Models.SinhVien", "SinhVien")
                        .WithMany("XemLichHocs")
                        .HasForeignKey("MaSV")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LopHocPhan");

                    b.Navigation("MonHoc");

                    b.Navigation("SinhVien");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.Khoa", b =>
                {
                    b.Navigation("Nganhs");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.LopHocPhan", b =>
                {
                    b.Navigation("DangKyHocPhans");

                    b.Navigation("ThanhToans");

                    b.Navigation("XemLichHocs");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.LopSinhVien", b =>
                {
                    b.Navigation("SinhViens");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.MonHoc", b =>
                {
                    b.Navigation("ChuongTrinhKhungs");

                    b.Navigation("LopHocPhans");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.Nganh", b =>
                {
                    b.Navigation("ChuongTrinhKhungs");

                    b.Navigation("LopSinhViens");

                    b.Navigation("MonHocs");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.SinhVien", b =>
                {
                    b.Navigation("DangKyHocPhans");

                    b.Navigation("ThanhToans");

                    b.Navigation("XemLichHocs");
                });

            modelBuilder.Entity("WebServer_DoAn.Models.TaiKhoan", b =>
                {
                    b.Navigation("SinhViens");
                });
#pragma warning restore 612, 618
        }
    }
}
